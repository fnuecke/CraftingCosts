buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: 'forge'
apply plugin: 'idea'

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.mod.version}"
group = "li.cil.cc"
archivesBaseName = "CraftingCosts"

def getGitRef() {
  try {
    def stdout = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'rev-parse', '--short', 'HEAD'
      standardOutput = stdout
    }
    return stdout.toString().trim()
  } catch (Throwable e) {
    return "unknown"
  }
}

if (System.getenv("BUILD_NUMBER") != null)
    version += ".${System.getenv("BUILD_NUMBER")}"
else
    version += "-" + getGitRef()

if (config.mod.subversion != null && config.mod.subversion != "")
    version += "-${config.mod.subversion}"

ext.simpleVersion = version
version = "MC${config.minecraft.version}-${project.version}"

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

repositories {
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name = "mobius"
        url = "http://mobiusstrip.eu/maven"
    }
}

configurations {
    provided
    compile.extendsFrom provided
}

dependencies {
//    provided "codechicken:CodeChickenLib:${config.minecraft.version}-${config.ccl.version}:dev"
    provided "codechicken:NotEnoughItems:${config.minecraft.version}-${config.nei.version}:dev"
}

idea.module.scopes.PROVIDED.plus += [configurations.provided]

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "run"

    replace "@VERSION@", project.simpleVersion
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.simpleVersion, 'mcversion': config.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea {
    module {
        outputDir = file('build/classes/main')
    }
}
